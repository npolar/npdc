# Choose between www and non-www, listen on the *wrong* one and redirect to
# the right one -- http://wiki.nginx.org/Pitfalls#Server_Name
server {
  listen 80;
  listen [::]:80 ipv6only=on;

  # listen on both hosts
  server_name app2.data.npolar.no www.app2.data.npolar.no;

  # and redirect to the https host (declared below)
  # avoiding http://www -> https://www -> https:// chain.
  return 301 https://app2.data.npolar.no$request_uri;
}

server {
  # @FIXME add 'spdy' when supported by server nginx
  listen 443 ssl;
  listen [::]:443 ssl;

  # listen on the wrong host
  server_name www.app2.data.npolar.no;

  include ssl-directives.conf;

  # and redirect to the non-www host (declared below)
  return 301 https://app2.data.npolar.no$request_uri;
}

server {
  # @FIXME add 'spdy' when supported by server nginx
  listen 443 ssl deferred;
  listen [::]:443 ssl ipv6only=on deferred;

  server_name app2.data.npolar.no;

  include ssl-directives.conf;

  root /srv/data.npolar.no;
  index index.html;

  charset utf-8;

  # Force the latest IE version
  add_header "X-UA-Compatible" "IE=Edge";

  # Home runs under /home/
  location = / {
    rewrite .* /home redirect;
  }

  # Cache these resources for ~ a session
  location / {
    add_header Pragma "public";
    add_header Cache-Control "max-age=300, public, must-revalidate, proxy-revalidate";

    # Unless file, directory, or symbolic link
    if (!-e $request_filename) {
      rewrite ^(/.+?/)(.+)$ $1#!/$2 redirect;
    }
  }

  # Temporary file proxies. Remove when we have file api

  # Used by Oceanography Buoy API
  location /raw/ {
    proxy_pass http://dbmaster.data.npolar.no/;
  }

  # Used by map archive
  location /_file {
    proxy_pass http://dbmaster.data.npolar.no/;
  }
}
